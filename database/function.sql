USE Proyecto2;

DROP FUNCTION IF EXISTS SafeInput;
DELIMITER $$
CREATE FUNCTION SafeInput (input VARCHAR(1000)) RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE IS_SAFE BOOLEAN DEFAULT FALSE;
    IF (input NOT REGEXP '[^A-Za-z0-9@.]') THEN
        SET IS_SAFE = TRUE;
    END IF;
    RETURN IS_SAFE;
END;
$$
DELIMITER ;

DROP FUNCTION IF EXISTS ValidateEmail;
DELIMITER $$
CREATE FUNCTION ValidateEmail (email VARCHAR(1000)) RETURNS BOOLEAN
DETERMINISTIC
BEGIN
   DECLARE IS_VALID BOOLEAN DEFAULT FALSE;
    IF (email REGEXP '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$') THEN
        SET IS_VALID = TRUE;
    END IF;
    RETURN IS_VALID;
END;
$$
DELIMITER ;

DROP FUNCTION IF EXISTS IsAlpha;
DELIMITER $$
CREATE FUNCTION IsAlpha (input VARCHAR(1000)) RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE IS_VALID BOOLEAN DEFAULT FALSE;

    IF (input REGEXP '^[A-Za-z]+$') THEN
        SET IS_VALID = TRUE;
    END IF;
    RETURN IS_VALID;
END;
$$
DELIMITER ;

DROP FUNCTION IF EXISTS IsIntPositive;
DELIMITER $$
CREATE FUNCTION IsIntPositive (input VARCHAR(1000)) RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE IS_VALID BOOLEAN DEFAULT FALSE;

    IF (input REGEXP '^[0-9]+$') THEN
        SET IS_VALID = TRUE;
    END IF;
    RETURN IS_VALID;
END;
$$
DELIMITER ;

DROP FUNCTION IF EXISTS  CarreraExisteID;
DELIMITER $$
CREATE FUNCTION CarreraExisteID (param_id_carrera INT) RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE EXISTE BOOLEAN DEFAULT FALSE;
    IF (SELECT COUNT(*) FROM Carrera WHERE id_carrera = param_id_carrera) > 0 THEN
        SET EXISTE = TRUE;
    END IF;
    RETURN EXISTE;
END;
$$
DELIMITER ;

DROP FUNCTION IF EXISTS  CarreraExisteNombre;
DELIMITER $$
CREATE FUNCTION CarreraExisteNombre (param_nombre_carrera VARCHAR(200)) RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE EXISTE BOOLEAN DEFAULT FALSE;
    IF (SELECT COUNT(*) FROM Carrera WHERE nombre = param_nombre_carrera) > 0 THEN
        SET EXISTE = TRUE;
    END IF;
    RETURN EXISTE;
END;
$$
DELIMITER ;

DROP FUNCTION IF EXISTS CursoExisteID;
DELIMITER $$
CREATE FUNCTION CursoExisteID (param_id_curso INT) RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE EXISTE BOOLEAN DEFAULT FALSE;
    IF (SELECT COUNT(*) FROM Curso WHERE id_curso = param_id_curso) > 0 THEN
        SET EXISTE = TRUE;
    END IF;
    RETURN EXISTE;
END;
$$
DELIMITER ;


DROP FUNCTION IF EXISTS ValidarCiclo;
DELIMITER $$
CREATE FUNCTION ValidarCiclo (param_ciclo VARCHAR(2)) RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE IS_VALID BOOLEAN DEFAULT FALSE;
    -- First char must be 1, 2, V
    -- Second char must be S, J, D
    IF (param_ciclo REGEXP '^[1-2V][SJD]$') THEN
        SET IS_VALID = TRUE;
    END IF;
    RETURN IS_VALID;
END;
$$
DELIMITER ;

DROP FUNCTION IF EXISTS SeccionExisteID;
DELIMITER $$
CREATE FUNCTION SeccionExisteID (param_seccion CHAR, param_id_curso INT) RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE EXISTE BOOLEAN DEFAULT FALSE;
    IF(SELECT COUNT(*) FROM CursoHabilitado WHERE id_curso = param_id_curso AND seccion = param_seccion) > 0 THEN
        SET EXISTE = TRUE;
    END IF;
    RETURN EXISTE;
END;

$$
DELIMITER ;


DROP FUNCTION IF EXISTS FormatIDCarrera;
DELIMITER $$
CREATE FUNCTION FormatIDCarrera (param_id_carrera INT) RETURNS INT
DETERMINISTIC
-- Return id+1
BEGIN
    DECLARE id_carrera INT DEFAULT 0;
    SET id_carrera = param_id_carrera + 1;
    RETURN id_carrera;
END;
$$
DELIMITER ;

